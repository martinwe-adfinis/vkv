#!/bin/sh -

# dmenu frontend to vkv(1)
# Written by martinwe on a cold Sunday afternoon in January 2024.
#
# Dependencies:
# · POSIX-compliant /bin/sh
# · POSIX-compliant cat, printf, test/[, true/false
# · dmenu
# · libnotify (for notify-send)
# · vkv
# · xdotool (for vkvmenu -t)

set -u

die()
{
	# shellcheck disable=SC2059
	msg=$(printf "$@")
	printf '%s\n' "$msg" >&2
	notify-send 'vkvmenu' "$msg"
	exit 1
}

print_help()
{
	cat <<- EOF
	vkvmenu - select vkv secrets with dmenu

	Usage: vkvmenu -h
	       vkvmenu [OPTIONS]

	Options:
	  -h     Show this message and exit
	  -t     Type out the secret instead of copying it to the clipboard

	If an option is not recognised (or -- is encountered), the remainder of the
	arguments are passed to dmenu.
	EOF
}

TYPEIT=false
passthrough=false
while ! $passthrough && getopts :ht opt; do
	case "$opt" in
		(h) print_help; exit 0 ;;
		(t) TYPEIT=true; shift ;;
		(:) die 'Missing argument for -%s' "$OPTARG" ;;
		('?')
			if [ "$OPTARG" = '-' ]; then
				shift
				passthrough=true
			else
				die 'Unknown option -%s' "$OPTARG"
			fi ;;
		(*) die '[BUG] Unhandled option -%s' "$OPTARG"
	esac
done
shift $((OPTIND - 1))
unset OPTARG
readonly TYPEIT

queries=$(vkv list) || die 'Failed to list KV paths.'
query=$(
	dmenu "$@" <<- EOF
	$queries
	EOF
) || die 'Aborted by user.'

if $TYPEIT; then
	# shellcheck disable=SC2086
	secret=$(vkv show $query) || die 'Failed to get secret.'
	xdotool type --clearmodifiers "$secret" || die 'Failed to type out secret.'
else
	# shellcheck disable=SC2086
	vkv show -c $query || die 'Failed to get secret into clipboard.'
fi
